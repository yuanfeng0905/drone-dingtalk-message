---
kind: pipeline
name: testing

steps:
  - name: vet
    pull: always
    image: golang
    commands:
      - make vet
    environment:
      GO111MODULE: on
    volumes:
      - name: gopath
        path: /go

  - name: test
    pull: always
    image: golang
    commands:
      - make test
      - make coverage
    environment:
      GO111MODULE: on
    volumes:
      - name: gopath
        path: /go

  - name: codecov
    pull: always
    image: plugins/codecov
    settings:
      token:
        from_secret: codecov_token

volumes:
  - name: gopath
    temp: {}

---
kind: pipeline
name: build

steps:
  - name: build
    pull: always
    image: golang
    commands:
      - go build -a -o drone-dingtalk-message .
    environment:
      CGO_ENABLED: 0
      GO111MODULE: on

  - name: executable
    pull: always
    image: golang
    commands:
      - ./drone-dingtalk-message -h

  - name: dryrun
    pull: always
    image: plugins/docker
    settings:
      cache_from: lddsb/drone-dingtalk-message
      dockerfile: Dockerfile
      dryrun: true
      repo: lddsb/drone-dingtalk-message
      tags:
        - latest
        - 1.0.0
    when:
      event:
        - pull_request

  - name: publish
    pull: always
    image: plugins/docker
    settings:
      repo: lddsb/drone-dingtalk-message
      dockerfile: Dockerfile
      tags:
        - latest
        - 1.0.0
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      status:
        - success
      event:
        - tag

trigger:
  ref:
    - refs/heads/master
    - 'refs/pull/**'
    - 'refs/tags/**'

depends_on:
  - testing
